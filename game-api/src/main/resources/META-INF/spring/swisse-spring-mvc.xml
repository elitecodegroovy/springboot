<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />
	<!-- AspectJ使用 CGLIB 代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- spring托管的注解类 -->
	<context:component-scan base-package="com.biostime.swisse" />

	<!-- <mvc:annotation-driven /> -->
	<mvc:annotation-driven>
        <mvc:message-converters>
        	<bean id="date2JsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        		<property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
        	</bean>
			<!-- 防止上传插件报406，没有返回json -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
				<property name="prefixJson" value="false"/>
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
						<value>text/json</value>
					</list>
				</property>
			</bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

	<!-- 静态资源映射 Security框架配置 -->
	<mvc:resources mapping="/**" location="/html5/"/>

	<!-- 视图处理 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="contentNegotiationManager" ref="cnManager"/>

		<!-- 手动指定使用的 viewResolver -->
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
					<property name="order" value="1" />
				</bean>
				<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<!-- Security框架配置 -->
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
       	 			<property name="contentType" value="text/html"/>
       	 			<!-- 结束 -->
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>

		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<!-- Renders XML View -->
				<!--<bean class="org.springframework.web.servlet.view.xml.MarshallingView">-->
					<!--<constructor-arg>-->
						<!--<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">-->
							<!--<property name="packagesToScan">-->
								<!--<list>-->
									<!--<value>com.mama100</value>-->
								<!--</list>-->
							<!--</property>-->
						<!--</bean>-->
					<!--</constructor-arg>-->
				<!--</bean>-->
				<!--&lt;!&ndash; Renders EXCEL View &ndash;&gt;-->
				<!--<bean class="com.biostime.swisse.web.util.excel.ExcelView" />-->
			</list>
		</property>
	</bean>

	<!--
    Setup a simple strategy:
       1. Only path extension is taken into account, Accept headers are ignored.
       2. Return HTML by default when not sure.
 -->
	<bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="defaultContentType" value="application/json" />
		<property name="mediaTypes" >
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="xls" value="application/vnd.ms-excel"/>
				<entry key="xlsx" value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"/>
			</map>
		</property>
	</bean>
	<!-- 上传 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="1000000000"/>
	</bean>

	<!--<bean id="druidStatInterceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />-->
	<!--<bean id="druidStatPointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">-->
		<!--<property name="patterns">-->
			<!--<list>-->
				<!--<value>com.biostime.swisse.*</value>-->
			<!--</list>-->
		<!--</property>-->
		<!--<property name="excludedPatterns">-->
			<!--<list>-->
				<!--<value>com.biostime.common.*</value>-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->
	<!--<aop:config proxy-target-class="true">-->
		<!--<aop:advisor advice-ref="druidStatInterceptor" pointcut-ref="druidStatPointcut" />-->
	<!--</aop:config>-->

	
	<!-- =======================Security框架配置========================= -->
	
	<!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>
</beans>